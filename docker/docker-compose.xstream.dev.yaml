# A bash-able template that will fill with variables if correct environment variables are loaded
# source context.{dev | prod}
# eval echo "" > output.yaml

# XStream dev worker configuration
# For notes on setup see docs/development/architecture.md#XStream-Architecture-Setup

version: \"3.7\" #XStream can only support up to 3.7. Using docker 18.06.1-ce

# Default images and setup for worker containers
x-default-worker: &default-worker
  image: ${FULL_IMAGE_NAME}
  env_file: worker.env
  environment:
      - TERACHEM_PBS_PORT=11111
      - C_FORCE_ROOT=true # to run celery as root with pickle serializer
  volumes:
    - tcc-dev-scratch:/scratch

# Default images and setup for terachem containers
x-default-terachem: &default-terachem
  image: mtzgroup/terachem:1.9-2021.02-dev-arch-sm_37-sm_52-sm_61-sm_70
  secrets:
    - source: terachem_license
      target: /terachem/license.key
  volumes:
    - tcc-dev-scratch:/scratch

# NOTE: No xs7-0001 workers accoriding to Stephane
# # Deploy to xs7-0001 node
# x-xs7-0001-deploy: &xs7-0001
#   placement:
#     constraints:
#       - "node.hostname==xs7-0001"

# # Celery workers on xs7-0001
# x-xs7-0001-worker: &xs7-0001-worker
#   <<: *default-worker
#   deploy:
#     <<: *xs7-0001

# # TeraChem servers on xs7-0001
# x-xs7-0001-terachem: &xs7-0001-terachem
#   <<: *default-terachem
#   deploy:
#     <<: *xs7-0001

# Deploy to xs7-0002 node
x-xs7-0002-deploy: &xs7-0002
  placement:
    constraints:
      - "node.hostname==xs7-0002"

# Celery workers on xs7-0002
x-xs7-0002-worker: &xs7-0002-worker
  <<: *default-worker
  deploy:
    <<: *xs7-0002

# TeraChem servers on xs7-0002
x-xs7-0002-terachem: &xs7-0002-terachem
  <<: *default-terachem
  deploy:
    <<: *xs7-0002

# Deploy to xs7-0003 node
x-xs7-0003-deploy: &xs7-0003
  placement:
    constraints:
      - "node.hostname==xs7-0003"

# Celery workers on xs7-0003
x-xs7-0003-worker: &xs7-0003-worker
  <<: *default-worker
  deploy:
    <<: *xs7-0003

# TeraChem servers on xs7-0003
x-xs7-0003-terachem: &xs7-0003-terachem
  <<: *default-terachem
  deploy:
    <<: *xs7-0003

# Deploy to xs7-0100 node
x-xs7-0100-deploy: &xs7-0100
  placement:
    constraints:
      - "node.hostname==xs7-0100"

# Celery workers on xs7-0100
x-xs7-0100-worker: &xs7-0100-worker
  <<: *default-worker
  deploy:
    <<: *xs7-0100

# TeraChem servers on xs7-0100
x-xs7-0100-terachem: &xs7-0100-terachem
  <<: *default-terachem
  deploy:
    <<: *xs7-0100

services:
  # # Pod 1: xs7-0001, GPU 0
  # xs7-0001-worker-0: # name specified via {hostname}-worker-{gpu_number}
  #   <<: *xs7-0001-worker
  #   environment:
  #     - TERACHEM_PBS_HOST=xs7-0001-terachem-0 # Must match TeraChem service name below
  # xs7-0001-terachem-0: # name specified via {hostname}-terachem-gpu_number}
  #   <<: *xs7-0001-terachem
  #   environment:
  #     - NVIDIA_VISIBLE_DEVICES=0

  # Pod 2: xs7-0002, GPU 0
  xs7-0002-worker-0:
    <<: *xs7-0002-worker
    environment:
      - TERACHEM_PBS_HOST=xs7-0002-terachem-0
  xs7-0002-terachem-0:
    <<: *xs7-0002-terachem
    environment:
      - NVIDIA_VISIBLE_DEVICES=0
  
  # Pod 3: xs7-0003, GPU 0
  xs7-0003-worker-0:
    <<: *xs7-0003-worker
    environment:
      - TERACHEM_PBS_HOST=xs7-0003-terachem-0
  xs7-0003-terachem-0:
    <<: *xs7-0003-terachem
    environment:
      - NVIDIA_VISIBLE_DEVICES=0

  # Pod 3: xs7-0100, GPU 0,1
  xs7-0100-worker-0:
    <<: *xs7-0100-worker
    environment:
      - TERACHEM_PBS_HOST=xs7-0100-terachem-0
    command: celery -A terachem_cloud.workers.tasks worker -Q real_time --without-heartbeat --without-mingle --without-gossip --loglevel=INFO
  xs7-0100-terachem-0:
    <<: *xs7-0100-terachem
    environment:
      - NVIDIA_VISIBLE_DEVICES=0,1

secrets:
  terachem_license:
    external: true

volumes:
  tcc-dev-scratch:
