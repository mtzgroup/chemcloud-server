# CircleCi deploy configuration

# Basic functionality is that:
#  1. All branches and tags trigger test_code
#  2. All branches and tags can be approved and deployed to dev
#  3. Only branches tagged with tags using semvar (i.e., x.x.x) can be deployed to prod
version: 2.1

parameters:
  docker_profile:
    type: string
    default: mtzgroup

  chemcloud_docker_repo:
    type: string
    default: chemcloud-server

  server_stacks_directory:
    type: string
    default: stacks

commands:
  full_image_name:
    description: Create and write to file FULL_IMAGE_NAME for docker builds
    parameters:
      docker_repo:
        description: The name of the Docker repo to build/push to
        type: string

    steps:
      - run:
          name: Export FULL_IMAGE_NAME based on docker profile, repo, and git tags/branch
          command:
            | # Tag with Github tag if set, otherwise tag with branch name substituting "/" for "-"
            if [ -z $CIRCLE_TAG ]
            then
              TAG=`echo ${CIRCLE_BRANCH//\//-}`
            else
              TAG=$CIRCLE_TAG
            fi

            FULL_IMAGE_NAME=<< pipeline.parameters.docker_profile >>/<< parameters.docker_repo >>:${TAG}
            echo "export FULL_IMAGE_NAME=${FULL_IMAGE_NAME}" >> $BASH_ENV

jobs:
  test_code:
    resource_class: medium
    docker:
      - image: cimg/python:3.13
      - image: rabbitmq:3.8-alpine
      - image: redis:6-alpine
      - image: mtzgroup/bigchem-worker
        command: celery -A bigchem.tasks worker -Q celery,private_queue --without-heartbeat --without-mingle --without-gossip --loglevel=INFO
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-poetry-lock-{{checksum "poetry.lock"}}
            - v2-poetry-lock-
      - run:
          name: Install dependencies
          command: POETRY_VIRTUALENVS_CREATE=false poetry install --no-interaction --no-ansi
      - save_cache:
          paths:
            - ~/.local/bin/
            - ~/.local/lib/python3.13/site-packages/
          key: v2-poetry-lock-{{checksum "poetry.lock"}}
      - run:
          command: python -m pytest --cov-report html:test-reports/pytest/htmlcov --cov --junitxml=test-reports/pytest/junit.xml
          name: Test
      - store_test_results: #  Uploads test results to CircleCI. These results will display in the Test Summary section of the CircleCI application.
          name: Store test results
          path: test-reports
      - store_artifacts:
          name: Store artifacts
          path: test-reports

  build:
    parameters:
      docker_repo:
        description: The Docker repo name
        type: string
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false # must pay for this feature; would be nice!
      - full_image_name:
          docker_repo: << parameters.docker_repo >>
      - run:
          name: Docker login
          command: echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin
      - run:
          name: Build image
          command: |
            docker build -t ${FULL_IMAGE_NAME} .
      - run:
          name: Push image to Martinez Group Docker Hub
          command: |
            docker image push ${FULL_IMAGE_NAME}
            if [ ! -z $CIRCLE_TAG ]
            then
              LATEST_IMAGE_NAME=<< pipeline.parameters.docker_profile >>/<< parameters.docker_repo >>:latest
              docker tag ${FULL_IMAGE_NAME} ${LATEST_IMAGE_NAME}
              docker image push ${LATEST_IMAGE_NAME}
            fi

  deploy_web:
    parameters:
      stage:
        description: dev or prod
        type: string
      ssh-fingerprint:
        description: SSH fingerprint for docker swarm master nodes
        type: string
    docker:
      - image: cimg/base:2020.01
        environment:
          DOCKER_COMPOSE_FILENAME: docker-compose.web.yaml
          SERVER_FILEPATH: << pipeline.parameters.server_stacks_directory >>/chemcloud
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - << parameters.ssh-fingerprint >>
      - full_image_name:
          docker_repo: << pipeline.parameters.chemcloud_docker_repo >>
      - run:
          name: Fill docker-compose template with context
          command: |
            source docker/context.<< parameters.stage >>
            eval "echo \"$(cat $(pwd)/docker/${DOCKER_COMPOSE_FILENAME})\"" > ${DOCKER_COMPOSE_FILENAME}
      - run:
          name: Make stack directory on server
          command: |
            ssh-keyscan -H ${MTZLAB_SWARM_HOST} >> ~/.ssh/known_hosts
            ssh root@${MTZLAB_SWARM_HOST} "mkdir -p ${SERVER_FILEPATH}"
      - run:
          name: Push docker-compose files to server
          command: |
            scp ${DOCKER_COMPOSE_FILENAME} "root@${MTZLAB_SWARM_HOST}:${SERVER_FILEPATH}/${DOCKER_COMPOSE_FILENAME}"
      - run:
          name: Login server to Martinez Group Docker Repo
          command: |
            ESCAPED_DOCKERHUB_PASSWORD=`printf "%q" ${DOCKERHUB_PASSWORD}` #  pragma: allowlist secret
            ssh root@${MTZLAB_SWARM_HOST} ESCAPED_DOCKERHUB_PASSWORD=${ESCAPED_DOCKERHUB_PASSWORD} DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME} "echo ${ESCAPED_DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin" #  pragma: allowlist secret
      - run:
          name: Deploy docker stack on server
          command: ssh root@${MTZLAB_SWARM_HOST} "docker stack deploy --prune --with-registry-auth -c ${SERVER_FILEPATH}/${DOCKER_COMPOSE_FILENAME} chemcloud"

workflows:
  main:
    jobs:
      - test_code:
          filters: # required since various deploy jobs have tag filters AND require test-code https://circleci.com/docs/2.0/workflows/#executing-workflows-for-a-git-tag
            tags:
              only: /.*/

      # Build Web
      - build_web_approval:
          type: approval
          filters:
            tags:
              only: /.*/ # required since prod_web_deploy requires this step and has tag filters
      - build:
          name: web_build
          requires:
            - test_code
            - build_web_approval
          docker_repo: chemcloud-server
          filters:
            tags:
              only: /.*/ # required since prod_web_deploy requires this step and has tag filters

      # Deploy dev
      - dev_deploy_web_approval:
          type: approval
          filters:
            tags:
              only: /.*/
      - deploy_web:
          name: dev_web_deploy
          context: dev-context
          ssh-fingerprint: 35:2d:cc:27:f9:79:bf:6c:c1:7f:24:1d:f4:07:8c:d3
          filters:
            tags:
              only: /.*/
          requires:
            - dev_deploy_web_approval
            - web_build
          stage: dev

      # Prod deploy
      - prod_deploy_web_approval:
          type: approval
          filters: # Only run on x.x.x tagged branches
            tags:
              only: /\d*\.\d*\.\d*/
            branches:
              ignore: /.*/
      - deploy_web:
          name: prod_web_deploy
          context: prod-context
          ssh-fingerprint: fa:2a:8d:76:3f:41:e5:de:65:88:67:2a:9a:8a:11:ca
          filters:
            tags:
              only: /\d*\.\d*\.\d*/
            branches:
              ignore: /.*/
          requires:
            - prod_deploy_web_approval
            - web_build
          stage: prod
